{"version":3,"file":"static/js/635.4ea5d3e2.chunk.js","mappings":"gOACA,EAAuB,wBAAvB,EAA2D,6BAA3D,EAAoG,6BAApG,EAA4I,4BAA5I,EAA+L,wCAA/L,EAA2P,qC,SCI9OA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACE,kBAAMC,UAAWC,EAAUC,SAjBR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfX,GACEY,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAOoDC,aAAa,KAAhE,WACE,mBAAOb,UAAWC,EAAlB,mBAEE,kBAAOD,UAAWC,EAAea,KAAK,QAAQC,KAAK,cAErD,mBAAOf,UAAWC,EAAlB,sBAEE,iBAAKD,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXa,KAAMhB,EAAe,OAAS,WAC9BiB,KAAK,cAEP,mBACEf,UAAWC,EACXa,KAAK,SACLE,QArBmB,WAC3BjB,GAAgB,SAAAkB,GAAS,OAAKA,CAAL,GAC1B,EAoBSC,SAAS,KAJX,SAMGpB,EAAe,OAAS,gBAI/B,mBAAQE,UAAWC,EAAca,KAAK,SAAtC,sBAKL,ECnDc,SAASK,IACtB,OACE,4BACE,sCAEA,SAACzB,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"formLabel\":\"LoginForm_formLabel__Ogzum\",\"formInput\":\"LoginForm_formInput__kt+x6\",\"logInBtn\":\"LoginForm_logInBtn__AOX3o\",\"passwordInputWrapper\":\"LoginForm_passwordInputWrapper__ehSP+\",\"passwordToggleBtn\":\"LoginForm_passwordToggleBtn__i3NYp\"};","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { logIn } from 'redux/auth/authOperations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"on\">\n      <label className={css.formLabel}>\n        Email\n        <input className={css.formInput} type=\"email\" name=\"email\" />\n      </label>\n      <label className={css.formLabel}>\n        Password\n        <div className={css.passwordInputWrapper}>\n          <input\n            className={css.formInput}\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n          />\n          <button\n            className={css.passwordToggleBtn}\n            type=\"button\"\n            onClick={handleTogglePassword}\n            tabIndex=\"-1\"\n          >\n            {showPassword ? 'Hide' : 'Show'}\n          </button>\n        </div>\n      </label>\n      <button className={css.logInBtn} type=\"submit\">\n        Log In\n      </button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","useState","showPassword","setShowPassword","className","css","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","type","name","onClick","prevState","tabIndex","Login"],"sourceRoot":""}