{"version":3,"file":"static/js/40.d2835859.chunk.js","mappings":"+NACA,EAAuB,2BAAvB,EAA8D,gCAA9D,EAA0G,gCAA1G,EAAwJ,kCAAxJ,EAAiN,2CAAjN,EAAgR,wC,SCInQA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAmBA,OACE,kBAAMC,UAAWC,EAAUC,SAlBR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfX,GACEY,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAOoDC,aAAa,KAAhE,WACE,mBAAOd,UAAWC,EAAlB,sBAEE,kBAAOD,UAAWC,EAAec,KAAK,OAAOP,KAAK,aAEpD,mBAAOR,UAAWC,EAAlB,mBAEE,kBAAOD,UAAWC,EAAec,KAAK,QAAQP,KAAK,cAErD,mBAAOR,UAAWC,EAAlB,sBAEE,iBAAKD,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXc,KAAMjB,EAAe,OAAS,WAC9BU,KAAK,cAEP,mBACER,UAAWC,EACXc,KAAK,SACLC,QAzBmB,WAC3BjB,GAAgB,SAAAkB,GAAS,OAAKA,CAAL,GAC1B,EAwBSC,SAAS,KAJX,SAMGpB,EAAe,OAAS,gBAI/B,mBAAQE,UAAWC,EAAiBc,KAAK,SAAzC,uBAKL,ECzDc,SAASI,IACtB,OACE,4BACE,6CAEA,SAACzB,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"formLabel\":\"RegisterForm_formLabel__om6l+\",\"formInput\":\"RegisterForm_formInput__Rum0L\",\"registerBtn\":\"RegisterForm_registerBtn__p-FTZ\",\"passwordInputWrapper\":\"RegisterForm_passwordInputWrapper__HRpB4\",\"passwordToggleBtn\":\"RegisterForm_passwordToggleBtn__i-pe-\",\"black\":\"RegisterForm_black__wpGKz\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"on\">\n      <label className={css.formLabel}>\n        Username\n        <input className={css.formInput} type=\"text\" name=\"name\" />\n      </label>\n      <label className={css.formLabel}>\n        Email\n        <input className={css.formInput} type=\"email\" name=\"email\" />\n      </label>\n      <label className={css.formLabel}>\n        Password\n        <div className={css.passwordInputWrapper}>\n          <input\n            className={css.formInput}\n            type={showPassword ? 'text' : 'password'}\n            name=\"password\"\n          />\n          <button\n            className={css.passwordToggleBtn}\n            type=\"button\"\n            onClick={handleTogglePassword}\n            tabIndex=\"-1\"\n          >\n            {showPassword ? 'Hide' : 'Show'}\n          </button>\n        </div>\n      </label>\n      <button className={css.registerBtn} type=\"submit\">\n        Sign In\n      </button>\n    </form>\n  );\n};\n\n// {\n//   showPassword ? (\n//   <svg width=\"40\" height=\"40\" aria-label=\"Перемикач\">\n//     <use class=\"icon-eye\" href=\"./icons/symbols.svg#icon-eye\"></use>\n//   </svg>\n// ) : (\n//   <svg width=\"40\" height=\"40\" aria-label=\"Перемикач\">\n//     <use\n//       class=\"icon-eye-blocked\"\n//       href=\"./icons/symbols.svg#icon-eye-blocked\"\n//     ></use>\n//   </svg>\n//   );\n// }\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","useState","showPassword","setShowPassword","className","css","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","onClick","prevState","tabIndex","Register"],"sourceRoot":""}